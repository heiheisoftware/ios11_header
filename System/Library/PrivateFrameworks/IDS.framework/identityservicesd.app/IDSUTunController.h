//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "IDSPairingManagerDelegate.h"

@class IDSLinkManager, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSString;

@interface IDSUTunController : NSObject <IDSPairingManagerDelegate>
{
    struct SimpleNSStringToObjectTable _deviceConnectionInfoTableByCbuuid;
    struct _opaque_pthread_mutex_t _deviceConnectionInfoTableByCbuuidLock;
    IDSLinkManager *_linkManager;
    _Bool _logPackets;
    _Bool _vifShouldReadMultiple;
    unsigned int _vifMaxPendingPackets;
    _Bool _vifUseChannel;
    _Bool _hasFixedDestination;
    _Bool _encryptionEnabled;
    _Bool _controlChannelEncryptionDisabled;
    NSObject<OS_dispatch_semaphore> *_controlChannelVersionCacheLock;
    NSMutableDictionary *_controlChannelVersionCache;
    _Bool _isSimulateResetLoopTest;
    NSObject<OS_dispatch_queue> *_ipsecQueue;
    _Bool _useBTDatagramPipe;
    _Bool _ignoreUTunChannelWriteSignal;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) IDSLinkManager *linkManager; // @synthesize linkManager=_linkManager;
- (void)onTransportThread_StopBTDatagramLinkForDefaultPairedDevice;
- (unsigned long long)onTransportThread_SendWithConnectionContext:(id)arg1 packetBuffer:(CDStruct_3b17df7f *)arg2;
- (void)clearStats;
- (void)didUpdatePairedDevice:(id)arg1;
- (void)didRemovePairedDevice:(id)arg1;
- (void)didAddPairedDevice:(id)arg1;
- (void)link:(id)arg1 hasSpaceAvailable:(_Bool)arg2 deviceUniqueID:(id)arg3 cbuuid:(id)arg4;
- (void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;
- (void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;
- (_Bool)link:(id)arg1 didReceivePacket:(CDStruct_3b17df7f *)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;
- (void)sendSuspendOTRNegotiationMessage:(id)arg1;
- (void)sendOTRNegotiationMessage:(id)arg1 negotiationCount:(unsigned int)arg2 negotiationData:(id)arg3;
- (void)setLinkPreferences:(id)arg1;
- (void)setPreferInfraWiFi:(_Bool)arg1;
- (unsigned long long)totalPacketsReceivedForDevice:(id)arg1 services:(id)arg2;
- (unsigned long long)totalPacketsSentForDevice:(id)arg1 services:(id)arg2;
- (id)perServiceDataReceivedForDevice:(id)arg1 services:(id)arg2;
- (id)perServiceDataSentForDevice:(id)arg1 services:(id)arg2;
- (id)perServiceDataTransferredForDevice:(id)arg1 services:(id)arg2;
- (id)onTransportThread_PerServiceDataTransferredForDevice:(id)arg1 services:(id)arg2;
- (id)copyLinkStatsDict;
- (void)deletePairedDevice:(id)arg1;
- (void)connectPairedDevice:(id)arg1;
- (void)addPairedDevice:(id)arg1;
- (void)tearDownEncryptionForDeviceUniqueID:(id)arg1 cbuuid:(id)arg2;
- (void)obliterateConnectionInfoForCBUUID:(id)arg1 completionBlock:(CDUnknownBlockType)arg2 completionQueue:(id)arg3;
- (void)obliterateConnectionInfoWithCompletionBlock:(CDUnknownBlockType)arg1 completionQueue:(id)arg2;
- (void)obliterateConnectionInfo;
- (void)startLocalSetup;
- (void)onTransportThread_UpdateStreamIDFilter:(id)arg1 streamIDList:(id)arg2 optOut:(_Bool)arg3;
- (unsigned long long)onTransportThread_getLinkType:(id)arg1;
- (void)onTransportThread_CurrentCellularSignalStrength:(id)arg1 signalRaw:(int *)arg2 signalStrength:(int *)arg3 signalGrade:(int *)arg4;
- (void)onTransportThread_StopKeepAlive:(id)arg1 linkIDs:(id)arg2;
- (void)onTransportThread_UpdateProtocolQualityOfService:(id)arg1 linkID:(BOOL)arg2 isGood:(_Bool)arg3;
- (void)onTransportThread_DropIPPackets:(id)arg1 linkID:(BOOL)arg2 payloadArray:(id)arg3;
- (void)onTransportThread_SetPacketNotificationFilter:(id)arg1 linkID:(BOOL)arg2 uniqueTag:(unsigned int)arg3 isEnabled:(_Bool)arg4;
- (void)onTransportThread_SetDefaultUnderlyingLink:(id)arg1 linkID:(BOOL)arg2;
- (void)onTransportThread_SendSKEData:(id)arg1 skeData:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)getLinkInformationForDevice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)removeAllocateRequest:(id)arg1 requestID:(id)arg2 errorCode:(int)arg3;
- (void)setAcceptedRelaySession:(id)arg1 relaySessionID:(id)arg2 options:(id)arg3;
- (void)disconnectGlobalLink:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)connectGlobalLink:(id)arg1 sessionInfo:(id)arg2 connectReadyHandler:(CDUnknownBlockType)arg3;
- (void)connectGlobalLinkForDevice:(id)arg1 sessionInfo:(id)arg2;
- (void)stopGlobalLinkForDevice:(id)arg1;
- (void)startGlobalLinkForDevice:(id)arg1;
- (unsigned long long)onTransportThread_SendToGlobalLinkWithSessionID:(id)arg1 packetBuffer:(CDStruct_3b17df7f *)arg2;
- (void)stopGlobalLink:(id)arg1;
- (void)startConnectionForDevice:(id)arg1 isInitiator:(_Bool)arg2 remotePartyID:(id)arg3 useStunMICheck:(_Bool)arg4;
- (void)processRemoteConnectionDataForDevice:(id)arg1 remoteConnectionData:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)createConnectionDataForDevice:(id)arg1 localPartyID:(id)arg2 dataReadyHandler:(CDUnknownBlockType)arg3;
- (void)stopUDPGlobalLinkForDevice:(id)arg1;
- (void)startUDPGlobalLinkForDevice:(id)arg1;
- (void)resumeSocketWithOptions:(id)arg1;
- (void)suspendSocketWithOptions:(id)arg1;
- (void)checkSuspendTrafficForDevice:(id)arg1 wait:(_Bool)arg2;
- (void)doCheckSuspendTrafficForDevice:(id)arg1;
- (void)closeSocketWithOptions:(id)arg1;
- (void)closeSocketWithOptions:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)cleanupSocketsForClient:(id)arg1;
- (void)openSocketWithOptions:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)defaultPairedDeviceOptions;
- (void)closeDataConnectionWithDeviceConnectionInfo:(id)arg1 options:(id)arg2;
- (void)setupDataConnectionWithDeviceConnectionInfo:(id)arg1 options:(id)arg2;
- (id)controlChannelVersionForCbuuid:(id)arg1;
- (void)receiveControlChannelMessage:(id)arg1 fromCbuuid:(id)arg2 deviceUniqueID:(id)arg3;
- (id)stringComponentsForServiceConnectorService:(id)arg1;
- (id)serviceConnectorServiceForAccount:(id)arg1 service:(id)arg2 name:(id)arg3;
- (void)startCompressionForConnection:(id)arg1 deviceConnectionInfo:(id)arg2;
- (_Bool)processCompressionResponse:(id)arg1 fromDeviceConnectionInfo:(id)arg2;
- (_Bool)processCompressionRequest:(id)arg1 fromDeviceConnectionInfo:(id)arg2;
- (void)internalOpenSocketWithDestination:(id)arg1 localSA:(id)arg2 remoteSA:(id)arg3 protocol:(int)arg4 trafficClass:(int)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (_Bool)handleIncomingPacket:(CDStruct_3b17df7f *)arg1 fromDeviceToken:(id)arg2;
- (void)resetAllConnectionsForDevice:(id)arg1;
- (void)removeConnection:(id)arg1 fromDeviceConnectionInfo:(id)arg2 removeCode:(long long)arg3 removeReason:(id)arg4;
- (id)initWithName:(id)arg1 address:(id)arg2 andTestTransport:(id)arg3;
- (void)resetTCPConnection:(id)arg1 forDeviceConnectionInfo:(id)arg2;
- (void)startControlChannelWithDevice:(id)arg1 endpoint:(id)arg2;
- (void)didConnectControlChannelForDeviceConnectionInfo:(id)arg1 genericConnection:(id)arg2 socketDescriptor:(int)arg3 connection:(id)arg4 error:(id)arg5;
- (void)internalStartConnectionWithEndpoint:(id)arg1 service:(const char *)arg2 parameters:(id)arg3 serviceConnector:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)init;
- (id)setupNewDeviceConnectionInfoForCbuuid:(id)arg1 deviceUniqueID:(id)arg2 remoteDeviceEncryptionInfo:(id)arg3 defaultPairedDeviceOptions:(id)arg4;
- (_Bool)setupIPsecLinkForDeviceConnectionInfo:(id)arg1;
- (void)startDataChannelWithDevice:(id)arg1 genericConnection:(id)arg2 serviceConnectorService:(id)arg3 endpoint:(id)arg4;
- (_Bool)setupUTunForDeviceConnectionInfo:(id)arg1;
- (unsigned char)handleUtunChannelWrite:(id)arg1 source:(struct sockaddr *)arg2 destination:(struct sockaddr *)arg3 upperProtocol:(unsigned char)arg4 bytes:(const void *)arg5 bytesLen:(unsigned long long)arg6;
- (void)handleUtunChannelRead:(id)arg1 limit:(unsigned int)arg2;
- (void)handleIPPayload:(const void *)arg1 bytesLength:(unsigned long long)arg2 source:(struct sockaddr *)arg3 destination:(struct sockaddr *)arg4 upperProtocol:(unsigned char)arg5 forDeviceConnectionInfo:(id)arg6 flush:(_Bool)arg7 callerShouldStop:(_Bool *)arg8;
- (void)_getStallDetectorForConnection:(id)arg1 deviceConnecionInfo:(id)arg2;
- (void)_reloadSettings;
- (void)reloadSettings;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

