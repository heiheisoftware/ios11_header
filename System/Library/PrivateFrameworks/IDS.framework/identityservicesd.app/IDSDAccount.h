//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "IDSPairingManagerDelegate.h"
#import "IDSUTunDeliveryControllerConnectivityDelegate.h"

@class IDSDService, IDSRegistration, IDSRegistrationPushHandler, IMTimer, NSArray, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSSet, NSString;

@interface IDSDAccount : NSObject <IDSUTunDeliveryControllerConnectivityDelegate, IDSPairingManagerDelegate>
{
    NSMutableDictionary *_accountInfo;
    IDSRegistration *_registrationInfo;
    IDSDService *_service;
    NSString *_uniqueID;
    NSMutableArray *_setupHandlers;
    IDSRegistrationPushHandler *_pushHandler;
    IMTimer *_restoreTimer;
    NSDate *_dateOfLastHandlesCheck;
    NSMutableSet *_localServices;
    _Bool _disabledAutomatically;
    _Bool _duringInit;
    _Bool _createdDuringSetup;
    _Bool _shouldRequeryHandles;
    _Bool _issuingDependentCheck;
    _Bool _issuingHandlesCheck;
    _Bool _pendingDependentCheck;
    _Bool _pendingHandlesCheck;
    _Bool _pendingAuthenticate;
    _Bool _pendingReIdentify;
    _Bool _pendingReRegister;
    _Bool _isRegistrationActive;
    _Bool _pendingAccountInfoBroadcast;
    _Bool _isBeingRemoved;
    _Bool _isIssuingDependentCheck;
}

+ (_Bool)dependentRegistration:(id)arg1 hasDependentRegistrationWithURI:(id)arg2 token:(id)arg3;
+ (void)dependentRegistration:(id)arg1 findDeviceUniqueID:(id *)arg2 btID:(id *)arg3 forURI:(id)arg4 token:(id)arg5;
+ (void)sendMessageWithSendParameters:(id)arg1 service:(id)arg2 threadContext:(id)arg3 willSendBlock:(CDUnknownBlockType)arg4 completionBlock:(CDUnknownBlockType)arg5;
+ (void)_sendLocallyWithSendParameters:(id)arg1 service:(id)arg2 uriToLocalDestination:(id)arg3 data:(id)arg4 protobuf:(id)arg5 threadContext:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;
+ (void)_splitDestinations:(id)arg1 intoLocalDestinations:(id *)arg2 remoteDestinations:(id *)arg3 threadContext:(id)arg4;
@property(nonatomic) _Bool isBeingRemoved; // @synthesize isBeingRemoved=_isBeingRemoved;
@property(readonly, nonatomic) _Bool isIssuingDependentCheck; // @synthesize isIssuingDependentCheck=_isIssuingDependentCheck;
@property(nonatomic) _Bool pendingDependentCheck; // @synthesize pendingDependentCheck=_pendingDependentCheck;
@property(nonatomic) _Bool wasDisabledAutomatically; // @synthesize wasDisabledAutomatically=_disabledAutomatically;
@property(readonly, nonatomic) NSDictionary *accountInfo; // @synthesize accountInfo=_accountInfo;
@property(readonly, nonatomic) IDSRegistration *registration; // @synthesize registration=_registrationInfo;
- (void).cxx_destruct;
- (void)didUpdateProtocolForPairedDevice:(id)arg1;
- (void)didUpdatePairedDevice:(id)arg1;
- (void)didRemovePairedDevice:(id)arg1;
- (void)didAddPairedDevice:(id)arg1;
- (void)_notifyDelegatesAddedLocalDevice:(id)arg1;
- (void)_notifyClientDelegatesWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, retain, nonatomic) NSDictionary *accountSetupInfo;
- (id)smallDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSArray *linkedAccounts;
- (id)adHocAccounts;
- (id)accountAndAdHocAccounts;
- (void)_updateAccountWithAccountInfo:(id)arg1;
- (void)writeAccountDefaults:(id)arg1;
- (void)_writeAccountDefaults:(id)arg1 force:(_Bool)arg2;
- (void)_broadcastAccountInfoChanged;
- (void)_notifyListenersWithChanges:(id)arg1;
- (void)_broadcastAccountMessageBlock:(CDUnknownBlockType)arg1;
- (_Bool)isAdHocAccount;
- (id)primaryServiceName;
- (id)primaryRegistration;
- (id)primaryAccountUniqueID;
- (id)primaryAccount;
- (id)dependentRegistrationMatchingUUID:(id)arg1;
@property(readonly, nonatomic) NSArray *dependentRegistrations;
- (id)_dependentRegistrationsForDefaultPairedDevice:(_Bool)arg1;
- (void)deactivateAlias:(id)arg1;
- (void)activateAlias:(id)arg1;
@property(retain, nonatomic) NSSet *activeAliases;
@property(readonly, nonatomic) _Bool shouldFilterInactiveAliases;
@property(readonly, nonatomic) IDSDAccount *superAccount;
@property(readonly, nonatomic) NSDictionary *defaultPairedDependentRegistration;
- (id)fromIDForCBUUID:(id)arg1;
- (_Bool)hasDependentRegistrationWithURI:(id)arg1 token:(id)arg2;
- (void)findDeviceUniqueID:(id *)arg1 btID:(id *)arg2 forURI:(id)arg3 token:(id)arg4;
@property(readonly, nonatomic) _Bool isUsableForSending;
@property(readonly, nonatomic) _Bool hasEverRegistered;
- (id)_certForFromURI:(id)arg1;
- (_Bool)hasAliasURI:(id)arg1;
@property(readonly, nonatomic) NSArray *uris;
@property(readonly, nonatomic) NSArray *aliasStrings;
- (void)setupAccountWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool isEnabled;
@property(readonly, nonatomic) _Bool shouldRegisterUsingDSHandle;
@property(readonly, nonatomic) _Bool shouldAutoRegisterAllHandles;
@property(readonly, nonatomic) _Bool isRegistered;
- (void)authenticationChanged;
@property(readonly, nonatomic) long long registrationError;
@property(readonly, nonatomic) int registrationErrorReason;
@property(readonly, nonatomic) int registrationStatus;
@property(retain, nonatomic) NSString *loginID;
@property(readonly, nonatomic) NSString *dsID;
@property(readonly, nonatomic) NSString *dsHandle;
@property(readonly, nonatomic) int accountType;
@property(nonatomic) _Bool isUserDisabled;
- (void)clearDisplayName;
@property(retain, nonatomic) NSString *displayName;
@property(readonly, nonatomic) NSString *uniqueID;
@property(readonly, nonatomic) IDSDService *service;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (void)cleanupAccount;
- (id)initWithLoginID:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 accountType:(int)arg4 accountConfig:(id)arg5;
- (id)initAdHocAccountWithLoginID:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 accountType:(int)arg4 accountConfig:(id)arg5 primaryAccount:(id)arg6;
- (id)_initWithLoginID:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 accountType:(int)arg4 accountConfig:(id)arg5 primaryAccount:(id)arg6 isAdHocAccount:(_Bool)arg7;
- (id)initWithDictionary:(id)arg1 service:(id)arg2 uniqueID:(id)arg3;
- (void)_setupAccount;
- (void)_resetVariables;
- (void)_cleanupAccount;
- (void)systemDidLeaveFirstDataProtectionLock;
- (id)pushHandler;
- (id)serviceType;
- (void)reportiMessageUnknownSender:(id)arg1 messageID:(id)arg2 messageServerTimestamp:(id)arg3 toURI:(id)arg4;
- (void)reportSpamWithMessages:(id)arg1 toURI:(id)arg2;
- (long long)validationStatusForAlias:(id)arg1;
- (id)aliases;
- (id)invisibleAliases;
- (id)vettedAliases;
- (void)reIdentify;
- (void)reregister;
- (void)_refreshRegistration;
- (void)validateProfile;
- (void)refreshVettedAliases;
- (void)validateCredentialsWithDeliveryCompletionBlock:(CDUnknownBlockType)arg1;
- (void)deactivateAndPurgeIdentify;
- (void)unvalidateAliases:(id)arg1;
- (void)_unvalidateAliases:(id)arg1;
- (void)validateAliases:(id)arg1;
- (void)_validateAliases:(id)arg1;
- (void)_validateAliases:(id)arg1 validateAlreadyValid:(_Bool)arg2;
- (void)addAliases:(id)arg1;
- (void)_addAliases:(id)arg1;
- (void)removeAliases:(id)arg1;
- (void)_removeAliases:(id)arg1;
- (void)_setValidationStatus:(long long)arg1 error:(int)arg2 forAlias:(id)arg3 info:(id)arg4 addToCurrentHandlesIfNeeded:(_Bool)arg5 forceAdd:(_Bool)arg6;
- (void)_setValidationStatus:(long long)arg1 error:(int)arg2 forAlias:(id)arg3 info:(id)arg4 addToCurrentHandlesIfNeeded:(_Bool)arg5 forceAdd:(_Bool)arg6 aliasProperties:(id)arg7;
- (long long)_validationStatusForAlias:(id)arg1;
- (id)_aliases;
- (id)_aliasStrings;
- (void)_ignoreIncomingPushes;
- (void)_acceptIncomingPushes;
- (void)center:(id)arg1 failedRegionValidation:(id)arg2 error:(long long)arg3 info:(id)arg4;
- (void)center:(id)arg1 succeededRegionValidation:(id)arg2 regionID:(id)arg3 phoneNumber:(id)arg4 extraContext:(id)arg5 verified:(_Bool)arg6;
- (void)center:(id)arg1 succeededCurrentEmailsRequest:(id)arg2 emailInfo:(id)arg3;
- (void)center:(id)arg1 failedEmailValidationRequest:(id)arg2 emailAddress:(id)arg3 error:(long long)arg4 info:(id)arg5;
- (void)center:(id)arg1 failedLinkHandlesConfirmation:(id)arg2 emailAddress:(id)arg3 error:(long long)arg4 info:(id)arg5;
- (void)center:(id)arg1 failedUnlinkHandleRequest:(id)arg2 handle:(id)arg3 error:(long long)arg4 info:(id)arg5;
- (void)center:(id)arg1 succeededUnlinkHandleRequest:(id)arg2 handle:(id)arg3;
- (void)center:(id)arg1 succeededEmailValidationRequest:(id)arg2 emailAddress:(id)arg3;
- (void)center:(id)arg1 succeededLinkHandlesConfirmation:(id)arg2 emailAddress:(id)arg3;
- (void)center:(id)arg1 failedAuthentication:(id)arg2 error:(long long)arg3 info:(id)arg4;
- (void)center:(id)arg1 succeededAuthentication:(id)arg2;
- (void)center:(id)arg1 startedAuthenticating:(id)arg2;
- (void)registrationControllerNeedsNewRegistration:(id)arg1;
- (void)registrationController:(id)arg1 deregistrationSucceeded:(id)arg2;
- (void)registrationController:(id)arg1 deregistrationWillStart:(id)arg2;
- (void)registrationController:(id)arg1 registrationFailed:(id)arg2 error:(long long)arg3 info:(id)arg4;
- (void)registrationController:(id)arg1 registrationSucceeded:(id)arg2;
- (void)registrationController:(id)arg1 registrationUpdated:(id)arg2;
- (void)registrationController:(id)arg1 registrationWillStart:(id)arg2;
- (void)center:(id)arg1 succeededIdentification:(id)arg2 phoneNumber:(id)arg3 token:(id)arg4;
- (void)_updateSessionsWithRegisteredURIs:(id)arg1;
- (void)_flushTokensForRegisteredURIs:(id)arg1;
- (void)_processReceivedDependentRegistration:(id)arg1 oldDependentRegistrations:(id)arg2;
- (void)_issueDependentCheck;
- (void)_issueCriticalDependentCheck;
- (_Bool)_issueForcedDependentCheckIfPossible;
- (void)_saveAndNotifyGDRUpdate;
- (void)gdrReAuthenticateIfNecessary;
- (void)_clearGDRState;
- (void)handler:(id)arg1 profileHandlesUpdated:(id)arg2 status:(id)arg3;
- (void)handler:(id)arg1 profile:(id)arg2 deviceUpdated:(id)arg3 service:(id)arg4;
- (_Bool)_isThroughBuddy;
- (void)_updateHandles:(_Bool)arg1;
- (void)handler:(id)arg1 reloadBag:(id)arg2;
- (void)handler:(id)arg1 pushTokenChanged:(id)arg2;
- (void)updateAuthorizationCredentials:(id)arg1 token:(id)arg2;
- (void)passwordUpdated;
- (void)unregisterAccount;
- (void)_unregisterAccount;
- (void)registerAccount;
- (void)_registerAccount;
- (_Bool)_migrateRegistrationIfNeeded;
- (void)_retryRegister;
- (void)authenticateAccount;
- (void)_authenticateAccount;
- (void)deactivateRegistration;
- (void)activateRegistration;
- (void)systemRestoreStateDidChange;
- (void)systemDidStartBackup;
- (void)systemDidFinishMigration;
- (void)_reregister;
- (void)_reregisterAndReidentify:(_Bool)arg1;
- (void)_removeAuthenticationCredentials;
- (void)_reregisterAndReProvision;
- (void)_reAuthenticate;
- (_Bool)_stopRegistrationAgent;
- (void)_updateRegistrationStatusWithError:(long long)arg1 info:(id)arg2;
- (void)setRegistrationStatus:(int)arg1 error:(long long)arg2 alertInfo:(id)arg3;
- (void)_checkRegistration;
- (void)_updateVettedAliases:(id)arg1 emailInfo:(id)arg2 addToCurrentHandlesIfNeeded:(_Bool)arg3;
- (void)_keychainMigrationComplete:(id)arg1;
- (void)_identityGenerated:(id)arg1;
- (void)_identityRebuilt:(id)arg1;
- (void)_deregisterDeviceCenterNotifications;
- (void)_registerForDeviceCenterNotifications;
- (void)_registrationAbilityChanged:(id)arg1;
- (_Bool)isRegistrationActive;
- (_Bool)isDeviceAuthenticated;
- (_Bool)isDeviceRegistered;
- (void)refreshAdHocServiceNames;
- (_Bool)_rebuildRegistrationInfo:(_Bool)arg1;
- (long long)_neededRegistrationType;
- (void)_updatePhoneNumberCallerID;
- (_Bool)_hasBudgetForForcedGDR;
- (void)_updatePerformedForcedGDRDate;
- (id)_performedForcedGDRDatePeriod;
- (void)_clearForcedGDRDate;
- (void)_clearForcedGDRCount;
- (void)_incrementForcedGDRCount;
- (int)_currentForcedGDRCount;
- (id)userDefaults;
- (id)systemMonitor;
- (id)peerIDManager;
- (id)serviceController;
- (id)accountController;
- (id)appleIDNotificationCenter;
- (id)registrationCenter;
- (_Bool)shouldIncludeDefaultDeviceAsDestinationForMessageForFromID:(id)arg1;
- (void)decryptMessageData:(id)arg1 myURI:(id)arg2 fromURI:(id)arg3 token:(id)arg4 groupID:(id)arg5 encryptionType:(long long)arg6 isLiveRetry:(_Bool)arg7 completionBlock:(CDUnknownBlockType)arg8;
- (void)sendMessage:(id)arg1 bulkedPayload:(id)arg2 fromID:(id)arg3 toDestinations:(id)arg4 useDictAsTopLevel:(_Bool)arg5 dataToEncrypt:(id)arg6 encryptPayload:(_Bool)arg7 wantsResponse:(_Bool)arg8 expirationDate:(id)arg9 command:(id)arg10 wantsDeliveryStatus:(_Bool)arg11 deliveryStatusContext:(id)arg12 messageUUID:(id)arg13 priority:(long long)arg14 localDelivery:(_Bool)arg15 disallowRefresh:(_Bool)arg16 willSendBlock:(CDUnknownBlockType)arg17 completionBlock:(CDUnknownBlockType)arg18;
- (void)sendMessageWithSendParameters:(id)arg1 willSendBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_sendRemotelyWithSendParameters:(id)arg1 data:(id)arg2 protobuf:(id)arg3 willSendBlock:(CDUnknownBlockType)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)_sendLocallyWithSendParameters:(id)arg1 uriToLocalDestination:(id)arg2 data:(id)arg3 protobuf:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)utunDeliveryController;
- (void)_splitDestinations:(id)arg1 intoLocalDestinations:(id *)arg2 remoteDestinations:(id *)arg3 extraInformation:(id)arg4;
- (void)sendServerMessage:(id)arg1 command:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_sendMessageWithSendParametersOnMainThread:(id)arg1 filteredDestinations:(id)arg2 data:(id)arg3 compressedData:(id)arg4 protobufToSend:(id)arg5 willSendBlock:(CDUnknownBlockType)arg6 completionBlock:(CDUnknownBlockType)arg7;
- (id)newSendMessageContext;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

