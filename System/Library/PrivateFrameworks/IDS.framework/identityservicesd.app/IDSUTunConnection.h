//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "IDSSocketPairConnectionDelegate.h"

@class IDSLocalDeliveryQueue, IDSSocketPairConnection, IDSUTunPeerServiceMap, IMPowerAssertion, IMTimer, NSArray, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;

@interface IDSUTunConnection : NSObject <IDSSocketPairConnectionDelegate>
{
    id <IDSUTunConnectionDelegate> _delegate;
    NSMutableArray *_sendingMessages;
    NSMutableArray *_fallbackMessages;
    NSMutableDictionary *_statistics;
    NSMutableDictionary *_cumulativeOutgoingStatistics;
    NSMutableDictionary *_cumulativeIncomingStatistics;
    NSMutableDictionary *_tokenToOTREncryptionQueue;
    NSMutableDictionary *_tokenToOTRError;
    NSMutableDictionary *_dataProtectedIncomingMessages;
    IDSSocketPairConnection *_socketConnection;
    _Bool _openSocketCalled;
    _Bool _connectionSuspended;
    IMTimer *_timeoutTimer;
    IMTimer *_fallbackTimer;
    IMTimer *_dequeueTimer;
    NSString *_identifier;
    NSString *_otrTokenIdentifier;
    IDSLocalDeliveryQueue *_deliveryQueue;
    IMPowerAssertion *_sendingPowerAssertion;
    double _rtt;
    long long _cachedBytes[3];
    unsigned long long _maxQueueSize;
    long long _priority;
    NSString *_cbuuid;
    NSString *_uniqueID;
    NSDate *_lastFallback;
    _Bool _isMagnetIndicatingPeerIsAwake;
    _Bool _enabled;
    _Bool _needsHandshake;
    _Bool _isAlwaysConnected;
    _Bool _isCloudEnabled;
    NSMutableDictionary *_incomingResourceTransfers;
    NSMutableSet *_resettingIncomingResourceTransfers;
    NSMutableSet *_resumingIncomingResourceTransfers;
    _Bool _resumeResourceTransfers;
    _Bool _enableOTR;
    _Bool _useSharedOTRSession;
    _Bool _useNamedOTRSessionToken;
    _Bool _supportsLegacyOTRSessionToken;
    _Bool _newServiceSupported;
    _Bool _supportDynamicServices;
    _Bool _supportDynamicServicesOptimization;
    unsigned short _serviceMinCompatibilityVersion;
    NSMutableSet *_admissionDeniedTopics;
    unsigned char _remoteInstanceID[16];
    IDSUTunPeerServiceMap *_incomingServiceMap;
    IDSUTunPeerServiceMap *_outgoingServiceMap;
    NSMutableDictionary *_incomingServiceMapUpdateCounter;
    NSArray *_supportedMessageTypes;
    _Bool _shouldAbortOnMissingTopic;
}

@property(nonatomic) _Bool supportsLegacyOTRSessionToken; // @synthesize supportsLegacyOTRSessionToken=_supportsLegacyOTRSessionToken;
@property(nonatomic) _Bool enableOTR; // @synthesize enableOTR=_enableOTR;
@property(nonatomic) __weak id <IDSUTunConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) double rtt; // @synthesize rtt=_rtt;
@property(retain, nonatomic) NSArray *supportedMessageTypes; // @synthesize supportedMessageTypes=_supportedMessageTypes;
@property(readonly, nonatomic) _Bool isCloudEnabled; // @synthesize isCloudEnabled=_isCloudEnabled;
@property(readonly, nonatomic) NSDictionary *cumulativeOutgoingStatistics; // @synthesize cumulativeOutgoingStatistics=_cumulativeOutgoingStatistics;
@property(readonly, nonatomic) NSDictionary *cumulativeIncomingStatistics; // @synthesize cumulativeIncomingStatistics=_cumulativeIncomingStatistics;
@property(nonatomic) _Bool isAlwaysConnected; // @synthesize isAlwaysConnected=_isAlwaysConnected;
@property(retain, nonatomic) NSString *cbuuid; // @synthesize cbuuid=_cbuuid;
@property(nonatomic) unsigned long long maxQueueSize; // @synthesize maxQueueSize=_maxQueueSize;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)forceOTRNegotiation:(id)arg1 priority:(long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)connectionDidReceiveBytes:(id)arg1;
- (void)connectionDidReachInFlightMessageLowWaterMark:(id)arg1;
- (void)connectionBecameEmpty:(id)arg1;
- (void)connection:(id)arg1 didReceiveDataMessage:(id)arg2;
- (void)connectionDidClose:(id)arg1;
- (void)_dumpLogs;
- (void)_processIncomingDataMessage:(id)arg1;
- (void)_processIncomingResourceTransferMessage:(id)arg1 messageUUID:(id)arg2 streamID:(unsigned short)arg3 topic:(id)arg4 wantsAppAck:(_Bool)arg5 expectsPeerResponse:(_Bool)arg6 peerResponseIdentifier:(id)arg7 isDefaultPairedDevice:(_Bool)arg8;
- (unsigned long long)_currentLink;
- (void)_processMessage:(id)arg1 withSequenceNumberBlock:(CDUnknownBlockType)arg2;
- (void)_sendExpiredAckForMessage:(id)arg1;
- (void)_sendAckForMessage:(id)arg1;
- (void)sendAckForMessageWithSequenceNumber:(unsigned int)arg1;
- (long long)_socketToNiceCommand:(unsigned char)arg1;
- (void)_flushMessagesAll:(_Bool)arg1 response:(long long)arg2;
- (void)flushAllMessagesForReason:(long long)arg1;
- (void)dropDisallowedMessages;
- (_Bool)_messageHasValidEncryptionStatus:(id)arg1;
- (id)_optionallyDecryptMessage:(id)arg1;
- (id)_decryptPublicKeyEncryptedMessage:(id)arg1;
- (id)_decryptOTREncrtypedMessage:(id)arg1;
- (void)_handleOTRDecryptionError:(id)arg1;
- (void)_handleOTRDecryptionSuccess:(id)arg1;
- (_Bool)_storeIncomingClassADataMesageIfNeeded:(id)arg1 topic:(id)arg2 sequenceNumber:(unsigned int)arg3;
- (_Bool)_storeIncomingClassCDataMessageIfNeeded:(id)arg1 topic:(id)arg2 sequenceNumber:(unsigned int)arg3;
- (void)_sendEncryptedMessage:(id)arg1;
- (void)_sendPublicKeyEncryptedMessage:(id)arg1;
- (void)_sendOTREncryptionQueue:(id)arg1 streamID:(unsigned short)arg2;
- (void)_sendOTREncryptedMessage:(id)arg1 useEncryption:(_Bool)arg2 streamID:(unsigned short)arg3 forPriority:(long long)arg4 flag:(int)arg5 token:(id)arg6;
- (id)_encryptDataWithOTR:(id)arg1 token:(id)arg2;
- (void)classStorageBecameAvailable:(id)arg1;
- (void)handleOTRNegotiationTimeout:(id)arg1;
- (void)handleOTRNegotiationComplete:(id)arg1;
- (void)_requeueMessages:(id)arg1;
- (void)_requeueSendingMessage:(id)arg1;
- (void)_dequeueMessagesTimerDidFire:(id)arg1;
- (void)_invalidateMessagesDequeueTimer;
- (void)_startMessagesDequeueMessagesTimer;
- (double)_dequeueMessagesTimerInterval;
- (unsigned long long)_pendingOutgoingBytesForClass:(unsigned int)arg1;
- (void)_removeMessageFromStatistics:(id)arg1;
- (void)_addOutgoingMessageSize:(unsigned long long)arg1 forTopic:(id)arg2 dataProtectionClass:(unsigned int)arg3 isResource:(_Bool)arg4;
- (void)_addIncomingMessageSize:(unsigned long long)arg1 forTopic:(id)arg2;
- (void)_addMessageSize:(unsigned long long)arg1 forTopic:(id)arg2 direction:(unsigned char)arg3 dataProtectionClass:(unsigned int)arg4 isResource:(_Bool)arg5;
- (void)_updateDictionary:(id)arg1 addMessageSize:(long long)arg2 addMessageCount:(long long)arg3;
- (void)_sendSocketMessage:(id)arg1 ignoreSequenceNumber:(_Bool)arg2;
- (void)_sendSocketMessage:(id)arg1;
- (void)_clearSendingPowerAssertionWithReason:(id)arg1;
- (void)clearStats;
- (void)trafficClassesChanged;
- (void)_dequeueMessages;
- (id)serviceController;
- (_Bool)_nonBTAllowedForClientID:(id)arg1;
- (_Bool)supportsMessageOfType:(long long)arg1;
- (_Bool)checkServiceCompability:(id)arg1 localMessage:(id)arg2;
- (void)admissionPolicyChangedForTopic:(id)arg1 allowed:(_Bool)arg2;
- (_Bool)_messageIsAllowedToSendMessageOnTopic:(id)arg1;
- (void)_removeSocketPairMessage:(id)arg1 localMessage:(id)arg2 reason:(id)arg3 detailedError:(id)arg4 responseCode:(long long)arg5;
- (void)_removeSocketPairMessage:(id)arg1 localMessage:(id)arg2 reason:(id)arg3 responseCode:(long long)arg4;
- (void)_messageTimedOut:(id)arg1 localMessage:(id)arg2;
- (_Bool)_shouldAWDLogMessage:(id)arg1;
- (void)_timeoutTimerFired;
- (void)_resetTimeout:(id)arg1;
- (void)_fallbackTimerFired;
- (void)_resetFallbackTimeout:(double)arg1 useNextFallback:(_Bool)arg2;
- (_Bool)_performFallbackIfNecessary:(id)arg1;
- (double)_fallbackTimeout;
- (void)_clearLastFallbackWithReason:(id)arg1;
- (void)_connectivityChanged;
- (void)_handleBecomingEmptyOfCloudMessages;
- (void)_handleBecomingEmpty;
- (void)_handleBecomingEmptyForDataProtectionClass:(unsigned int)arg1;
- (_Bool)_nonThreadSafeIsConnected;
@property(readonly, nonatomic) _Bool isConnected;
- (void)cancelMessageID:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)_startConnection;
- (void)_checkAndStartConnection;
- (void)_startConnectionForContinuityPeer;
- (id)_nonThreadSafeSocketOptions;
- (_Bool)_isMagnetConnection;
- (void)_nonThreadSafeStopConnection;
- (void)setIsMagnetIndicatingPeerIsAwake:(_Bool)arg1;
- (_Bool)isMagnetIndicatingPeerIsAwake;
- (void)setEnabled:(_Bool)arg1 withReason:(id)arg2;
- (void)setEnabled:(_Bool)arg1;
- (_Bool)isEnabled;
- (void)setDeviceBTUUID:(id)arg1;
@property(readonly, nonatomic) NSDictionary *queueStatistics;
@property(readonly, nonatomic) NSDictionary *sendingMessageStatistics;
- (void)_addStatsFromDict:(id)arg1 toAggregate:(id)arg2;
- (id)_sendingMessageStatisticsForClass:(unsigned int)arg1;
- (_Bool)hasSpaceForMessagesWithDataProtectionClass:(unsigned int)arg1;
- (unsigned long long)_inflightMessageCountForType:(long long)arg1;
- (unsigned long long)_inflightMessageCountForClass:(unsigned int)arg1;
- (unsigned long long)_sendingMessageCountForType:(long long)arg1;
- (unsigned long long)_sendingMessageCountForClass:(unsigned int)arg1;
@property(readonly, nonatomic) _Bool isEmpty;
- (_Bool)_isWiProxPeer;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 socketPriority:(long long)arg2 btUUID:(id)arg3 uniqueID:(id)arg4 incomingServiceMap:(id)arg5 outgoingServiceMap:(id)arg6 isCloudEnabled:(_Bool)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

