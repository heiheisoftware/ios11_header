//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class IDSStallDetector, NSData, NSMutableArray, NSMutableData, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSSet, NSString;

@interface IDSSocketPairConnection : NSObject
{
    NSMutableData *_headerData;
    NSMutableData *_currentMessageData;
    id <IDSSocketPairConnectionDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    NSObject<OS_dispatch_semaphore> *_lock;
    unsigned long long _currentOutgoingDataIndex;
    NSData *_outgoingData;
    NSMutableArray *_outgoingMessageArray;
    unsigned int _currentOutgoingFragmentedMessageID;
    unsigned long long _inFlightMessageCountLowWaterMark;
    NSMutableDictionary *_incomingDataFragments;
    NSString *_connectionID;
    unsigned int _fragmentationSize;
    _Bool _isConnected;
    unsigned int _currentDataLength;
    long long _bytesReceived;
    double _prevBPS;
    int _connectedSocket;
    _Bool _writeSocketIsResumed;
    double _lastDateCheck;
    _Bool _notifyWhenConnectionReceivesBytes;
    long long _priority;
    CDUnknownBlockType _encryptionBlock;
    CDUnknownBlockType _decryptionBlock;
    unsigned int _maxAllowedMessageSize;
    double _lastSocketActivityTime;
    IDSStallDetector *_outgoingStallDetector;
    unsigned long long _linkType;
}

@property(retain, nonatomic) IDSStallDetector *outgoingStallDetector; // @synthesize outgoingStallDetector=_outgoingStallDetector;
@property(copy, nonatomic) NSString *connectionID; // @synthesize connectionID=_connectionID;
@property(nonatomic) unsigned int maxAllowedMessageSize; // @synthesize maxAllowedMessageSize=_maxAllowedMessageSize;
- (void).cxx_destruct;
- (void)setOTREncryptionBlock:(CDUnknownBlockType)arg1 decryptionBlock:(CDUnknownBlockType)arg2;
- (void)setNotifyWhenConnectionReceivesBytes:(_Bool)arg1;
- (void)_endSession;
- (_Bool)sendDataMessage:(id)arg1 canFragment:(_Bool)arg2;
- (_Bool)sendDataMessage:(id)arg1;
- (void)_sendToConnectedSocket;
- (_Bool)_queueNextOutgoingData;
- (void)_processBytesAvailable;
- (_Bool)_processIncomingMessage:(id)arg1;
- (void)processStoredIncomingMessage:(id)arg1;
- (void)removePendingMessagesForProtectionClass:(unsigned int)arg1;
- (long long)_read:(char *)arg1 maxLength:(unsigned long long)arg2;
- (void)_callDelegateWithBlock:(CDUnknownBlockType)arg1;
@property(nonatomic) unsigned long long inFlightMessageCountLowWaterMark;
@property(nonatomic) unsigned int fragmentationSize;
@property(readonly, nonatomic) NSSet *inFlightMessages;
@property(readonly, nonatomic) double lastSocketActivityTime;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) unsigned long long inFlightMessageCount;
@property(readonly, nonatomic) _Bool isConnected;
- (void)endSession;
- (void)dealloc;
- (void)start;
- (id)initWithSocket:(int)arg1 queue:(id)arg2 delegate:(id)arg3 priority:(long long)arg4 connectionID:(id)arg5 linkType:(unsigned long long)arg6;

@end

